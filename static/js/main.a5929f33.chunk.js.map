{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/api.js","components/Button/Button.jsx","js/scroll.js","components/Spinner/Spinner.jsx","components/Modal/Modal.jsx","components/App/App.js","index.js"],"names":["module","exports","Searchbar","props","useState","query","setQuery","className","s","searchbar","onSubmit","e","preventDefault","trim","toast","error","form","type","button","buttonLabel","name","input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","onClick","image","imageGalleryItem","imageGalleryItemimg","src","webformatURL","alt","tags","largeImageURL","ImageGallery","openModal","images","getImageModal","gallery","map","id","getImageApi","page","axios","get","then","response","data","hits","Promise","resolve","Button","btn","scrollPageDown","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Spinner","containerLoader","color","height","width","modalRoot","querySelector","Modal","handleKeyDown","key","onClose","useEffect","addEventListener","removeEventListener","createPortal","overlay","target","modal","largeImageUrl","App","setPage","setImages","modalContent","setModalContent","showModal","setShowModal","loading","setLoading","getImage","res","prevImages","finally","catch","toggleModal","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5929f33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__1LEDw\",\"imageGalleryItemimg\":\"ImageGalleryItem_imageGalleryItemimg__3CdaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__gboaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xaJM\",\"Button\":\"Button_Button__3R1xi\",\"hidden\":\"Button_hidden__3EsLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLoader\":\"Spinner_containerLoader__1lEzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__jo466\",\"form\":\"Searchbar_form__XuKjc\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3u-rY\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2bzU3\",\"input\":\"Searchbar_input__2C4aO\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Searchbar(props) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      toast.error('Put name picture');\n      return;\n    }\n\n    props.onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          name=\"query\"\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ onClick, image }) {\n  return (\n    <li className={s.imageGalleryItem}>\n      <img\n        className={s.imageGalleryItemimg}\n        src={image.webformatURL}\n        alt={image.tags}\n        onClick={() => {\n          onClick(image.largeImageURL);\n        }}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ openModal, images, getImageModal }) => {\n  return (\n    <ul className={s.gallery} onClick={openModal}>\n      {images.map(image => {\n        return <ImageGalleryItem image={image} onClick={getImageModal} key={image.id} />;\n      })}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array,\n  openModal: PropTypes.func.isRequired,\n  getImageModal: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\n\nconst API_KEY = '23543549-635b4a8d9e20c5ded331689b0';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n// toast.configure();\n\nfunction getImageApi(query, page) {\n  if (!query) {\n    return Promise.resolve([]);\n  }\n  return axios\n    .get(`${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n    .then(response => response.data.hits);\n}\n\nexport default getImageApi;\n","import React from 'react';\nimport s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => (\n  <button className={s.btn} onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","function scrollPageDown() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}\n\nexport default scrollPageDown;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Spinner.module.css';\n\nconst Spinner = () => {\n  return (\n    <div className={s.containerLoader}>\n      <Loader type=\"Rings\" color=\"#3f51b5\" height={80} width={80} />\n    </div>\n  );\n};\nexport default Spinner;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal(props) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  function handleKeyDown(e) {\n    if (e.key === 'Escape') {\n      props.onClose();\n    }\n  }\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      props.onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={handleBackdropClick}>\n      <div className={s.modal}>\n        <img src={props.largeImageUrl} alt={props.tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  largeImageUrl: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\nexport default Modal;\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from '../Searchbar/Searchbar.jsx';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport getImageApi from '../../services/api';\nimport Button from '../Button/Button.jsx';\nimport scrollPageDown from '../../js/scroll';\n\nimport Spinner from '../Spinner/Spinner.jsx';\nimport Modal from '../Modal/Modal.jsx';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [modalContent, setModalContent] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setImages([]);\n    setPage(1);\n    getImage();\n  }, [query]);\n\n  useEffect(() => getImage(), [page]);\n\n  function getImage() {\n    setLoading(true);\n    getImageApi(query, page)\n      .then(res => {\n        scrollPageDown();\n        setImages(prevImages => [...prevImages, ...res]);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n      .catch(() => {\n        toast.error('Server error');\n      });\n  }\n\n  const pageIncrement = () => {\n    setPage(page + 1);\n  };\n\n  function getImageModal(largeImageURL) {\n    setModalContent(largeImageURL);\n  }\n\n  const toggleModal = () => {\n    setShowModal(!false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={setQuery} />\n      {images.length !== 0 && <ImageGallery images={images} getImageModal={getImageModal} openModal={toggleModal} />}\n      {showModal && <Modal largeImageUrl={modalContent} onClose={toggleModal} />}\n      {loading && <Spinner />}\n      {images.length > 0 && <Button onClick={pageIncrement} />}\n\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}